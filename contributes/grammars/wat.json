{
  "name": "WebAssembly Module",
  "scopeName": "source.wasm.wat",
  "fileTypes": [".wat"],
  "patterns": [
    {
      "include": "#extra"
    },
    {
      "include": "#module"
    }
  ],
  "repository": {
    "annotation": {
      "patterns": []
    },
    "blockComment": {
      "name": "meta.comment.block.wasm comment.block.wasm",
      "begin": "(\\(;)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.comment.wasm"
        }
      },
      "end": "(;\\))",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.comment.wasm"
        }
      }
    },
    "comment": {
      "patterns": [
        {
          "include": "#lineComment"
        },
        {
          "include": "#blockComment"
        }
      ]
    },
    "export": {
      "patterns": []
    },
    "expr": {
      "patterns": []
    },
    "extra": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#annotation"
        }
      ]
    },
    "identifier": {
      "match": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
      "name": "entity.name.type.alias.wasm"
    },
    "funcType": {
      "patterns": [
        {
          "include": "#funcTypeParams"
        },
        {
          "include": "#funcTypeResults"
        }
      ]
    },
    "funcTypeParams": {
      "begin": "\\bparam\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.param.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "name": "entity.name.type.alias.wasm",
          "match": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+"
        },
        {
          "include": "#valueType"
        }
      ]
    },
    "funcTypeResults": {
      "begin": "\\bresult\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.param.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "include": "#valueType"
        }
      ]
    },
    "globalType": {
      "patterns": []
    },
    "import": {
      "patterns": []
    },
    "lineComment": {
      "name": "meta.comment.line.wasm",
      "begin": "(^[ \\t]+)?((;;))",
      "beginCaptures": {
        "1": {
          "name": "punctuation.whitespace.comment.leading.wasm"
        },
        "2": {
          "name": "comment.line.double-semicolon.wasm"
        },
        "3": {
          "name": "punctuation.definition.comment.wasm"
        }
      },
      "end": "(?=$)",
      "contentName": "comment.line.double-semicolon.wasm"
    },
    "module": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "(?<=\\()",
          "end": "\\bmodule\\b",
          "endCaptures": {
            "0": {
              "name": "meta.module.declaration.wasm storage.type.module.wasm"
            }
          },
          "patterns": [
            {
              "include": "#extra"
            }
          ]
        },
        {
          "name": "meta.module.declaration.wasm",
          "begin": "(?:(?<=(?:[^\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+]module|^module))(?!\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+))",
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.type.module.wasm"
                }
              },
              "end": "(?=\\))",
              "patterns": [
                {
                  "include": "#extra"
                },
                {
                  "include": "#moduleField"
                }
              ]
            },
            {
              "include": "#moduleField"
            }
          ]
        }
      ]
    },
    "moduleField": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "include": "#moduleFieldData"
        },
        {
          "include": "#moduleFieldElem"
        },
        {
          "include": "#moduleFieldExport"
        },
        {
          "include": "#moduleFieldFunc"
        },
        {
          "include": "#moduleFieldGlobal"
        },
        {
          "include": "#moduleFieldImport"
        },
        {
          "include": "#moduleFieldMemory"
        },
        {
          "include": "#moduleFieldStart"
        },
        {
          "include": "#moduleFieldTable"
        },
        {
          "include": "#moduleFieldType"
        }
      ]
    },
    "moduleFieldData": {
      "name": "meta.data.wasm",
      "begin": "\\bdata\\b",
      "beginCaptures": {
        "0": {
          "name": "storage.type.data.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "(?:[0-9][0-9_]*|0x[0-9A-Fa-f][0-9A-Fa-f_]*)|(?:\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+)",
          "beginCaptures": {
            "0": {
              "name": "variable.other.constant entity.name.data.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            }
          ]
        }
      ]
    },
    "moduleFieldElem": {
      "name": "meta.elem.declaration.wasm",
      "begin": "\\belem\\b",
      "beginCaptures": {},
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        }
      ]
    },
    "moduleFieldExport": {
      "name": "meta.export.declaration.wasm",
      "begin": "\\bexport\\b",
      "beginCaptures": {},
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        }
      ]
    },
    "moduleFieldFunc": {
      "begin": "\\bfunc\\b",
      "beginCaptures": {
        "0": {
          "name": "storage.type.function.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
          "beginCaptures": {
            "0": {
              "name": "entity.name.function.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "begin": "\\(",
              "beginCaptures": {
                "0": {
                  "name": "meta.brace.round.wasm"
                }
              },
              "end": "\\)",
              "endCaptures": {
                "0": {
                  "name": "meta.brace.round.wasm"
                }
              },
              "patterns": [
                {
                  "include": "#moduleFieldExport"
                },
                {
                  "include": "#moduleFieldImport"
                }
              ]
            }
          ]
        }
      ]
    },
    "moduleFieldGlobal": {
      "name": "meta.global.declaration.wasm",
      "begin": "\\bglobal\\b",
      "beginCaptures": {},
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        }
      ]
    },
    "moduleFieldImport": {
      "name": "meta.import.wasm",
      "begin": "\\bimport\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.import.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        }
      ]
    },
    "moduleFieldMemory": {
      "name": "meta.memory.declaration.wasm",
      "begin": "\\bmemory\\b",
      "beginCaptures": {},
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        }
      ]
    },
    "moduleFieldStart": {
      "name": "meta.start.wasm",
      "begin": "\\bstart\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.start.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
          "beginCaptures": {
            "0": {
              "name": "entity.name.function.wasm"
            }
          },
          "end": "(?=\\))"
        }
      ]
    },
    "moduleFieldTable": {
      "name": "meta.table.declaration.wasm",
      "begin": "\\btable\\b",
      "beginCaptures": {},
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        }
      ]
    },
    "moduleFieldType": {
      "name": "meta.type.declaration.wasm",
      "begin": "\\btype\\b",
      "beginCaptures": {
        "0": {
          "name": "storage.type.type.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "name": "entity.name.type.alias.wasm",
          "patterns": [
            {
              "include": "#identifier"
            }
          ]
        },
        {
          "include": "#typeField"
        }
      ]
    },
    "typeField": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "(?<=\\()",
          "end": "\\bfunc\\b",
          "endCaptures": {
            "0": {
              "name": "storage.type.function.wasm"
            }
          }
        },
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "meta.brace.round.wasm"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "meta.brace.round.wasm"
            }
          },
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "include": "#funcType"
            }
          ]
        }
      ]
    },
    "valueType": {
      "name": "entity.name.type.alias.wasm",
      "match": "[fi](?:32|64)"
    }
  }
}
