{
  "name": "WebAssembly Module",
  "scopeName": "source.wasm.wat",
  "fileTypes": [".wat"],
  "patterns": [
    {
      "include": "#extra"
    },
    {
      "include": "#module"
    }
  ],
  "repository": {
    "annotation": {
      "patterns": []
    },
    "blockComment": {
      "name": "meta.comment.block.wasm comment.block.wasm",
      "begin": "(\\(;)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.comment.wasm"
        }
      },
      "end": "(;\\))",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.comment.wasm"
        }
      }
    },
    "comment": {
      "patterns": [
        {
          "include": "#lineComment"
        },
        {
          "include": "#blockComment"
        }
      ]
    },
    "elemType": {
      "patterns": []
    },
    "expr": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "patterns": [
        {
          "include": "#expr1"
        }
      ]
    },
    "expr1": {
      "patterns": [
        {
          "include": "#expr1Plain"
        },
        {
          "include": "#expr1Call"
        },
        {
          "include": "#expr1Block"
        },
        {
          "include": "#expr1Loop"
        },
        {
          "include": "#expr1If"
        }
      ]
    },
    "expr1Block": {
      "patterns": []
    },
    "expr1Call": {
      "patterns": []
    },
    "expr1If": {
      "patterns": []
    },
    "expr1Loop": {
      "patterns": []
    },
    "expr1Plain": {
      "patterns": []
    },
    "extra": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#annotation"
        }
      ]
    },
    "funcType": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "(?<=\\()",
          "end": "\\bfunc\\b",
          "endCaptures": {
            "0": {
              "name": "storage.type.function.wasm"
            }
          }
        },
        {
          "begin": "\\(",
          "beginCaptures": {
            "0": {
              "name": "meta.brace.round.wasm"
            }
          },
          "end": "\\)",
          "endCaptures": {
            "0": {
              "name": "meta.brace.round.wasm"
            }
          },
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "include": "#param"
            },
            {
              "include": "#result"
            }
          ]
        }
      ]
    },
    "globalType": {
      "patterns": []
    },
    "importDesc": {
      "name": "meta.importdesc.wasm",
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "patterns": [
        {
          "begin": "\\bfunc\\b",
          "beginCaptures": {
            "0": {
              "name": "storage.type.function.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "name": "entity.name.function.wasm",
              "match": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+"
            },
            {
              "begin": "\\(",
              "beginCaptures": {
                "0": {
                  "name": "meta.brace.round.wasm"
                }
              },
              "end": "\\)",
              "endCaptures": {
                "0": {
                  "name": "meta.brace.round.wasm"
                }
              },
              "patterns": [
                {
                  "include": "#typeUse"
                }
              ]
            }
          ]
        },
        {
          "begin": "\\btable\\b",
          "beginCaptures": {
            "0": {
              "name": "storage.type.table.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
              "end": "(?=\\))",
              "patterns": [
                {
                  "include": "#extra"
                },
                {
                  "include": "#tableType"
                }
              ]
            },
            {
              "include": "#tableType"
            }
          ]
        },
        {
          "begin": "\\bmemory\\b",
          "beginCaptures": {
            "0": {
              "name": "storage.type.memory.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
              "end": "(?=\\))",
              "patterns": [
                {
                  "include": "#extra"
                },
                {
                  "include": "#tableType"
                }
              ]
            },
            {
              "include": "#memType"
            }
          ]
        },
        {
          "begin": "\\bglobal\\b",
          "beginCaptures": {
            "0": {
              "name": "storage.type.global.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
              "end": "(?=\\))",
              "patterns": [
                {
                  "include": "#extra"
                },
                {
                  "include": "#tableType"
                }
              ]
            },
            {
              "include": "#globalType"
            }
          ]
        }
      ]
    },
    "inlineExport": {
      "name": "meta.export.inline.wasm",
      "begin": "(?:(?<=(?:[^\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+]export|^export))(?!\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+))",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.export.wasm"
        }
      },
      "end": "(?<=\")",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "name": "entity.name.type.module.wasm",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "match": "\\\\([0-9A-Fa-f]{2}|u\\{[0-9A-Fa-f]+\\}|[\\\\'\\\\\"ntr]|$)"
            }
          ]
        }
      ]
    },
    "inlineImport": {
      "name": "meta.import.inline.wasm",
      "begin": "(?:(?<=(?:[^\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+]import|^import))(?!\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+))",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.import.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "(?:(?<=(?:[^\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+]import|^import))(?!\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+))",
          "end": "(?<=\")",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "name": "entity.name.type.module.wasm",
              "begin": "\"",
              "end": "\"",
              "patterns": [
                {
                  "match": "\\\\([0-9A-Fa-f]{2}|u\\{[0-9A-Fa-f]+\\}|[\\\\'\\\\\"ntr]|$)"
                }
              ]
            }
          ]
        },
        {
          "name": "variable.other.readwrite.alias.wasm",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "match": "\\\\([0-9A-Fa-f]{2}|u\\{[0-9A-Fa-f]+\\}|[\\\\'\\\\\"ntr]|$)"
            }
          ]
        },
        {
          "include": "#importDesc"
        }
      ]
    },
    "instr": {
      "patterns": [
        {
          "include": "#instrPlain"
        },
        {
          "include": "#instrCall"
        },
        {
          "include": "#instrBlock"
        },
        {
          "include": "#expr"
        }
      ]
    },
    "instrBlock": {
      "patterns": []
    },
    "instrCall": {
      "patterns": []
    },
    "instrPlain": {
      "patterns": []
    },
    "limits": {
      "patterns": []
    },
    "lineComment": {
      "name": "meta.comment.line.wasm",
      "begin": "(^[ \\t]+)?((;;))",
      "beginCaptures": {
        "1": {
          "name": "punctuation.whitespace.comment.leading.wasm"
        },
        "2": {
          "name": "comment.line.double-semicolon.wasm"
        },
        "3": {
          "name": "punctuation.definition.comment.wasm"
        }
      },
      "end": "(?=$)",
      "contentName": "comment.line.double-semicolon.wasm"
    },
    "local": {
      "patterns": []
    },
    "memType": {
      "patterns": []
    },
    "module": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "(?<=\\()",
          "end": "\\bmodule\\b",
          "endCaptures": {
            "0": {
              "name": "meta.module.declaration.wasm storage.type.module.wasm"
            }
          },
          "patterns": [
            {
              "include": "#extra"
            }
          ]
        },
        {
          "name": "meta.module.declaration.wasm",
          "begin": "(?:(?<=(?:[^\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+]module|^module))(?!\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+))",
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
              "beginCaptures": {
                "0": {
                  "name": "entity.name.type.module.wasm"
                }
              },
              "end": "(?=\\))",
              "patterns": [
                {
                  "include": "#extra"
                },
                {
                  "include": "#moduleField"
                }
              ]
            },
            {
              "include": "#moduleField"
            }
          ]
        }
      ]
    },
    "moduleField": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "include": "#moduleFieldData"
        },
        {
          "include": "#moduleFieldElem"
        },
        {
          "include": "#moduleFieldExport"
        },
        {
          "include": "#moduleFieldFunc"
        },
        {
          "include": "#moduleFieldGlobal"
        },
        {
          "include": "#moduleFieldImport"
        },
        {
          "include": "#moduleFieldMem"
        },
        {
          "include": "#moduleFieldStart"
        },
        {
          "include": "#moduleFieldTable"
        },
        {
          "include": "#moduleFieldType"
        }
      ]
    },
    "moduleFieldData": {
      "name": "meta.data.wasm",
      "begin": "\\bdata\\b",
      "beginCaptures": {
        "0": {
          "name": "storage.type.data.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "(?:[0-9][0-9_]*|0x[0-9A-Fa-f][0-9A-Fa-f_]*)|(?:\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+)",
          "beginCaptures": {
            "0": {
              "name": "variable.other.constant entity.name.data.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "include": "#offset"
            },
            {
              "include": "#string"
            }
          ]
        }
      ]
    },
    "moduleFieldElem": {
      "patterns": []
    },
    "moduleFieldExport": {
      "name": "meta.export.wasm",
      "begin": "\\bexport\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.export.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "include": "#inlineExport"
        }
      ]
    },
    "moduleFieldFunc": {
      "begin": "\\bfunc\\b",
      "beginCaptures": {
        "0": {
          "name": "storage.type.function.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
          "beginCaptures": {
            "0": {
              "name": "entity.name.function.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "begin": "\\(",
              "beginCaptures": {
                "0": {
                  "name": "meta.brace.round.wasm"
                }
              },
              "end": "\\)",
              "endCaptures": {
                "0": {
                  "name": "meta.brace.round.wasm"
                }
              },
              "patterns": [
                {
                  "include": "#moduleFieldExport"
                },
                {
                  "include": "#moduleFieldImport"
                },
                {
                  "include": "#typeUse"
                }
              ]
            }
          ]
        }
      ]
    },
    "moduleFieldGlobal": {
      "patterns": []
    },
    "moduleFieldImport": {
      "name": "meta.import.wasm",
      "begin": "\\bimport\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.import.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "include": "#inlineImport"
        }
      ]
    },
    "moduleFieldMem": {
      "patterns": []
    },
    "moduleFieldStart": {
      "name": "meta.start.wasm",
      "begin": "\\bstart\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.start.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
          "beginCaptures": {
            "0": {
              "name": "entity.name.function.wasm"
            }
          },
          "end": "(?=\\))"
        }
      ]
    },
    "moduleFieldTable": {
      "patterns": []
    },
    "moduleFieldType": {
      "name": "meta.type.declaration.wasm",
      "begin": "\\btype\\b",
      "beginCaptures": {
        "0": {
          "name": "storage.type.type.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+",
          "beginCaptures": {
            "0": {
              "name": "entity.name.type.alias.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "include": "#funcType"
            }
          ]
        },
        {
          "include": "#funcType"
        }
      ]
    },
    "offset": {
      "patterns": [
        {
          "include": "#offsetConstExpr"
        },
        {
          "include": "#expr"
        }
      ]
    },
    "offsetConstExpr": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.wasm"
        }
      },
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "begin": "\\boffset\\b",
          "beginCaptures": {
            "0": {
              "name": "storage.modifier.offset.wasm"
            }
          },
          "end": "(?=\\))",
          "patterns": [
            {
              "include": "#extra"
            },
            {
              "include": "#instr"
            }
          ]
        }
      ]
    },
    "param": {
      "begin": "\\bparam\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.param.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "name": "entity.name.type.alias.wasm",
          "match": "\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+"
        },
        {
          "include": "#valType"
        }
      ]
    },
    "result": {
      "begin": "\\bresult\\b",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.result.wasm"
        }
      },
      "end": "(?=\\))",
      "patterns": [
        {
          "include": "#extra"
        },
        {
          "include": "#valType"
        }
      ]
    },
    "resultType": {
      "patterns": []
    },
    "string": {
      "name": "string.quoted.double.wasm",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.wasm"
        }
      },
      "end": "(\")|((?:[^\\\\\\n])$)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.wasm"
        },
        "2": {
          "name": "invalid.illegal.newline.wasm"
        }
      },
      "patterns": [
        {
          "include": "#stringCharacterEscape"
        }
      ]
    },
    "stringCharacterEscape": {
      "name": "constant.character.escape.wasm",
      "match": "\\\\([0-9A-Fa-f]{2}|u\\{[0-9A-Fa-f]+\\}|[\\\\'\\\\\"ntr]|$)"
    },
    "tableType": {
      "patterns": []
    },
    "typeUse": {
      "patterns": [
        {
          "begin": "\\btype\\b",
          "beginCaptures": {
            "0": {
              "name": "storage.type.type.wasm"
            }
          },
          "end": "(?:[0-9][0-9_]*|0x[0-9A-Fa-f][0-9A-Fa-f_]*)|(?:\\$[0-9A-Za-z!#$%&'*+-./:<=>?@\\^_'|~]+)",
          "endCaptures": {
            "0": {
              "name": "entity.name.type.alias.wasm"
            }
          }
        },
        {
          "include": "#param"
        },
        {
          "include": "#result"
        }
      ]
    },
    "valType": {
      "patterns": [
        {
          "name": "entity.name.type.alias.wasm",
          "match": "\\bi32|i64|f32|f64\\b"
        }
      ]
    }
  }
}
